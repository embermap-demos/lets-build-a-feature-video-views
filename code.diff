diff --git a/tests/acceptance/video-test.js b/tests/acceptance/video-test.js
index c271cc8..a51770f 100644
--- a/tests/acceptance/video-test.js
+++ b/tests/acceptance/video-test.js
@@ -11,6 +11,7 @@ module('Acceptance | Video', function(hooks) {
     this.series = this.server.create('series', 'withClips');
     this.freeClip = this.series.clips.models[0];
     this.paidClip = this.series.clips.models[1];
+    this.emailWallClip = this.series.clips.models[3];
   });
 
   test('On the videos index page, I should see videos belonging to Refactorings', async function(assert) {
@@ -121,8 +122,7 @@ module('Acceptance | Video', function(hooks) {
     assert.equal(currentRouteName(), "404");
   });
 
-  test(`I should see a played label if I've watched a video`, async function(assert) {
-    // Assemble
+  test(`I should see a played label if I've watched the active/current video`, async function(assert) {
     let currentUser = loginUser();
     this.server.create('video-view', {
       user: currentUser,
@@ -130,13 +130,25 @@ module('Acceptance | Video', function(hooks) {
       finished: true
     });
 
-    // Act
     await visit(`/topics/${this.series.slug}/${this.freeClip.slug}`);
 
-    // Assert
     assert.dom(`[data-test-id="viewed-video-${this.freeClip.id}"]`).exists();
   });
 
+  test(`I should see a played label if I've watched a non-active video`, async function(assert) {
+    let currentUser = loginUser();
+    this.server.create('video-view', {
+      user: currentUser,
+      clip: this.emailWallClip,
+      finished: true
+    });
+
+    await visit(`/topics/${this.series.slug}/${this.freeClip.slug}`);
+
+    assert.dom(`[data-test-id="viewed-video-${this.emailWallClip.id}"]`).exists();
+    assert.dom(`[data-test-id="viewed-video-${this.freeClip.id}"]`).doesNotExist();
+  });
+
   // test(`I should not see a played label if I have an unfinished video view`, async function(assert) {
   // })
 
